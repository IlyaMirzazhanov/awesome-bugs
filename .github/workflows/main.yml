# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.9.7

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install -r scripts/requirements.txt
          python3 -m pip install -e ./scripts


      - name: Run clang-tidy and save reports to "res" folder
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang-tidy cmake
          mkdir build
          cd build
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          cd ..
          python3 -m clang_tidy -p ./build > res/clang-out
          cat res/clang-out

      # Checking format of code samples
      - name: Format checker
        run: python3 -m check_format

      # Comparing results to analyzers reports
      - name: Reports analysis
        run: python3 -m analyze_reports

      # Saving artifacts
      - name: Upload all .csv and .json reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: |
            *.csv
            *.json
